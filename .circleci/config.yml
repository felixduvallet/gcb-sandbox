# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.0

references:
  defaults: &defaults
    docker:
      - image: circleci/buildpack-deps:bionic
    working_directory: ~/repo

  workspace_root: &workspace_root
    /tmp/workspace

  run_build_container: &run_build_container
    name: Run container
    command:
      docker build -t vehicle_builder .

  run_start_container: &run_start_container
    name: Run container
    command:
      docker run -itd --name speedy_trucker vehicle_builder

  initialize: &initialize
    name: Initialize
    command:
      mkdir -p /tmp/workspace

  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root

jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker
      - run: *initialize
      - run: *run_build_container
      - run:
          name: Save docker image
          command:
            mkdir -p /tmp/workspace/docker-cache && docker save --output /tmp/workspace/docker-cache/vehicle_builder.tar vehicle_builder
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - docker-cache/vehicle_builder.tar
      - run: *run_start_container
      - run:
          name: Build code
          command:
            docker exec speedy_trucker /bin/sh -c "bazel build --verbose_failures --noexperimental_ui //source/..."
      - run:
          name: Run tests
          command:
            docker exec speedy_trucker /bin/sh -c "bazel test --verbose_failures --noexperimental_ui //source/..."
      - run:
          name: Run coverage
          command:
            docker exec speedy_trucker /bin/sh -c "./run_coverage.sh -f text"
      - run:
          name: Upload coverage results
          command:
            # request codecov to detect CI environment to pass through to docker
            ci_env=`bash <(curl -s https://codecov.io/env)`
            docker exec speedy_trucker -e $ci_env /bin/sh -c "bash <(curl -s https://codecov.io/bash)"

  build_native:
    <<:  *defaults
    steps:
      - checkout
      - run:
          name: Install deps
          command: |
            sudo ./install/install_bazel.sh
            sudo ./install/install_apt_dependencies.sh
      - run:
          name: Build code
          command: |
            bazel build --verbose_failures --noexperimental_ui //source/...

  load_container:
    <<:  *defaults
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Load container
          command:
            docker load -i /tmp/workspace/docker-cache/vehicle_builder.tar
      - run: *run_start_container

  lint_bazel:
    <<:  *defaults
    steps:
      - checkout
      - setup_remote_docker
      - run: *run_build_container
      - run: *run_start_container
      - run:
          name: Check bazel file
          command:
            docker exec speedy_trucker /bin/sh -c "bazel run //:build_beautifier_check_only"

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - build_native
